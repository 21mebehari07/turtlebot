<launch>
  <arg name="robot_name" default="tb3_6"/>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="set_lidar_frame_id" default="base_scan"/>
  <arg name="set_base_frame" default="base_footprint"/>
  <arg name="set_odom_frame" default="odom"/>
  <arg name="set_map_frame"  default="map"/>
  <arg name="set_cmd_vel" default="cmd_vel"/>

<!--  <arg name="slam_methods" default="gmapping" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration]"/> -->
<!--  <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/> -->


 <include file="$(find turtlebot3_bringup)/launch/turtlebot3_core.launch" ns="$(arg robot_name)">
    <arg name="robot_name" value="$(arg robot_name)"/>
  </include>

  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_lidar.launch" ns="$(arg robot_name)">
    <arg name="set_frame_id" value="$(arg robot_name)/$(arg set_lidar_frame_id)"/>
  </include>


  <node pkg="turtlebot3_bringup" type="turtlebot3_diagnostics" name="turtlebot3_diagnostics" output="screen" ns="$(arg robot_name)"/>

<!-- TurtleBot3 -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
    <arg name="robot_name" value="$(arg robot_name)" />
 </include> 
 

 <group ns="$(arg robot_name)">
 <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="screen">
    <param name="base_frame" value="$(arg robot_name)/$(arg set_base_frame)"/>
    <param name="odom_frame" value= "$(arg robot_name)/$(arg set_odom_frame)"/>
    <param name="map_frame" value="$(arg robot_name)/$(arg set_map_frame)"/>
    <rosparam command="load" file="$(find turtlebot3_slam)/config/gmapping_params.yaml" />

    <remap from= "scan" to= "/$(arg robot_name)/scan"/>

  </node> </group>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen" ns="$(arg robot_name)">
    <rosparam file="$(find wsr_exploration)/param/tb3_hw_global_planner_params.yaml" command="load" ns="GlobalPlanner" />
    <rosparam file="$(find wsr_exploration)/param/tb3_hw_common_costmap_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find wsr_exploration)/param/tb3_hw_common_costmap_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find wsr_exploration)/param/tb3_hw_local_costmap_all_params.yaml" command="load" />
    <rosparam file="$(find wsr_exploration)/param/tb3_hw_global_costmap_all_params.yaml" command="load" />
    <rosparam file="$(find wsr_exploration)/param/tb3_hw_move_base_params.yaml" command="load" />
    <rosparam file="$(find wsr_exploration)/param/tb3_hw_local_planner_params.yaml" command="load" />

    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <param name="base_global_planner" value="global_planner/GlobalPlanner" />


    <remap from="cmd_vel" to="$(arg set_cmd_vel)"/>
    <remap from="odom" to="$(arg set_odom_frame)"/>

    <param name="global_costmap/robot_base_frame" value="$(arg robot_name)/base_footprint"/>
    <param name="global_costmap/global_frame" value="$(arg robot_name)/map"/>
    <param name="local_costmap/global_frame" value="$(arg robot_name)/odom"/>
    <param name="local_costmap/robot_base_frame" value="$(arg robot_name)/base_footprint"/>

  </node>

</launch>

